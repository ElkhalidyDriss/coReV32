---------------------------------------------------------------------------------------
--  Author: Driss Elkhalidy , an embedded systems engineering student                --
--          at National Institute of Posts and Telecommunications , Rabat , Morocco. --
--  Description : Implementation of Decode unit for  coReV32 in VHDL.                --
---------------------------------------------------------------------------------------



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity rv_decode is 
port (
      clk , rst_n : in std_logic; --clock and active low reset 
      instr : in std_logic_vector(31 downto 0);--Instruction
      instr_type : out std_logic_vector(31 downto 0);--Type of the instruction
      --Instruction fields
      funct3 : out std_logic_vector(2 downto 0);
      rs2 , rs1 : out std_logic_vector(4 downto 0);--Source registers addresses
      rd        : out std_logic_vector(4 downto 0);--Destination register address
      imm       : out std_logic_vector(20 downto 0);--Immediates have variable length from 12 to 21 bits
                                                    -- length depends on instruction type
      opcode : out std_logic_vector(7 downto 0);
      csr_addr : out std_logic_vector(11 downto 0);--Control & status register address 
);
end entity;


architecture rv_decode_arch of rv_decode is 
begin
rs1 <= instr(19 downto 15);
rs2 <= instr(24 downto 20);
rd  <= instr(11 downto 7);
funct3 <= instr(14 downto 12);






end architecture;
